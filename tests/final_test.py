#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã OCR
"""

import sys
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

def main():
    print("üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã OCR –¥–ª—è WhisperBridge")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
    print("1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    try:
        from whisperbridge.services.ocr_service import get_ocr_service
        from whisperbridge.core.ocr_manager import get_ocr_manager
        from whisperbridge.utils.image_utils import get_image_processor
        print("   ‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    print("2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
    try:
        ocr_service = get_ocr_service()
        ocr_manager = get_ocr_manager()
        image_processor = get_image_processor()
        print("   ‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–≤–∏–∂–∫–æ–≤
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö OCR –¥–≤–∏–∂–∫–æ–≤...")
    available = ocr_manager.get_available_engines()
    print(f"   ‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–≤–∏–∂–∫–∏: {available}")

    if not available:
        print("   ‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö OCR –¥–≤–∏–∂–∫–æ–≤!")
        return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    stats = ocr_service.get_engine_stats()
    for engine, stat in stats.items():
        status = "‚úÖ" if stat["available"] else "‚ö†Ô∏è"
        print(f"   {status} {engine}: {stat['total_calls']} –≤—ã–∑–æ–≤–æ–≤, {stat['successful_calls']} —É—Å–ø–µ—à–Ω—ã—Ö")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞
    print("5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞...")
    cache_stats = ocr_service.get_cache_stats()
    print(f"   ‚úÖ –ö—ç—à: —Ä–∞–∑–º–µ—Ä {cache_stats['size']}, {'–≤–∫–ª—é—á–µ–Ω' if cache_stats['enabled'] else '–æ—Ç–∫–ª—é—á–µ–Ω'}")

    print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("üìã –°–∏—Å—Ç–µ–º–∞ OCR –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)